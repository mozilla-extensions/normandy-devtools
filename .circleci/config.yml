version: 2.1

jobs:
  lint:
    docker:
      # Image with Python/Node and therapist pre-installed
      - image: mozilla/cidockerbases:therapist-latest

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Install corepack
          command: |
            npm i -g --force corepack
            corepack enable
      - run:
          name: Install node dependencies
          command: yarn --immutable
      - save_cache:
          paths:
            - ".yarn/cache"
          key: v2-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Lint
          command: therapist run --use-tracked-files

  test:
    docker:
      - image: node:14-stretch

    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Install corepack
          command: |
            npm i -g --force corepack
            corepack enable
      - run:
          name: Install node dependencies
          command: yarn --immutable
      - save_cache:
          paths:
            - ".yarn/cache"
          key: v2-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Run tests
          command: |
            yarn test

  build:
    docker:
      - image: node:14-stretch

    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Install corepack
          command: |
            npm i -g --force corepack
            corepack enable
      - run:
          name: Install node dependencies
          command: yarn --immutable
      - save_cache:
          paths:
            - ".yarn/cache"
          key: v2-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Build
          command: yarn build
      - run:
          name: Syntax check built output
          command: ls dist-*/*.js | xargs -l node --check
      - persist_to_workspace:
          root: .
          paths:
            - ./dist-web

  validate-tag:
    docker:
      - image: node:14-stretch

    steps:
      - checkout
      - run:
          name: Verify git tag matches version
          command: yarn node ./bin/check-package-version.js

  publish-docs:
    docker:
      - image: node:14-stretch

    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Install corepack
          command: |
            npm i -g --force corepack
            corepack enable
      - run:
          name: Install node dependencies
          command: yarn --immutable
      - save_cache:
          paths:
            - ".yarn/cache"
          key: v2-dependencies-{{ checksum "yarn.lock" }}

      - add_ssh_keys:
          fingerprints:
            - "e0:1e:09:cc:73:5a:54:a9:8b:da:45:b7:bf:19:ec:32"

      - run:
          name: Deploy docs to gh-pages
          command: |
            # Set up credentials
            git config user.email "ci-build@normandy.mozilla.org"
            git config user.name "ci-build"
            npm run publish-docs

  deploy-to-aws:
    docker:
      - image: circleci/python:3

    environment:

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Install AWS CLI tools
          command: sudo pip install awscli

      - run:
          name: Create version JSON file
          command: |
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
              "$CIRCLE_SHA1" \
              "${CIRCLE_TAG-}" \
              "$CIRCLE_PROJECT_USERNAME" \
              "$CIRCLE_PROJECT_REPONAME" \
              "$CIRCLE_BUILD_URL" \
              > dist-web/__version__

      - run:
          name: Upload to AWS
          command: |
            export AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY
            aws s3 sync --exclude __version__ dist-web/ s3://$BUCKET_NAME/ --delete
            aws s3 cp --content-type application/json dist-web/__version__ s3://${BUCKET_NAME}/__version__
            aws cloudfront create-invalidation --distribution-id ${DISTRIBUTION_ID} --paths '/*'

  check-dev-commands:
    docker:
      - image: node:14-stretch

    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Install corepack
          command: |
            npm i -g --force corepack
            corepack enable
      - run:
          name: Install node dependencies
          command: yarn --immutable
      - save_cache:
          paths:
            - ".yarn/cache"
          key: v2-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: Web build
          command: yarn build-web && [ -f dist-web/index.js ]

      - run:
          name: Extension build
          command: yarn build-ext && [ -f dist-extension/index.js ]

workflows:
  version: 2
  main:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - build:
          filters:
            tags:
              only: /.*/
      - check-dev-commands
      - publish-docs:
          filters:
            branches:
              only: main
      - validate-tag:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-to-aws:
          requires:
            - lint
            - test
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
