[
  {
    "namespace": "experiments.normandy",
    "description": "Normandy",
    "functions": [
      {
        "name": "getManualMode",
        "type": "function",
        "description": "Get the state of manual mode",
        "async": true,
        "parameters": []
      },

      {
        "name": "setManualMode",
        "type": "function",
        "description": "Turn manual mode on or off",
        "async": true,
        "parameters": [
          {
            "name": "manualMode",
            "type": "boolean",
            "description": "The new value for manual mode"
          }
        ]
      },

      {
        "name": "standardRun",
        "type": "function",
        "description": "Run Normandy as if the timer had fired",
        "async": true,
        "parameters": []
      },

      {
        "name": "getClientContext",
        "type": "function",
        "description": "Get the client context that would be used for filter evaluation",
        "async": true,
        "parameters": [
          {
            "name": "recipe",
            "optional": true,
            "description": "A recipe object to include in the context",
            "type": "object",
            "additionalProperties": true
          }
        ]
      },

      {
        "name": "evaluateFilter",
        "type": "function",
        "description": "Evaluate a filter expression",
        "async": true,
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "The filter to evaluate"
          },
          {
            "name": "recipe",
            "type": "object",
            "description": "The associated recipe object",
            "additionalProperties": true,
            "optional": true
          }
        ]
      },

      {
        "name": "getRecipeSuitabilities",
        "type": "function",
        "description": "Evaluate a recipe's suitability. This encompasses filters, capabilities, signature checks, and more. Returns an array of matching suitabilities.",
        "async": true,
        "parameters": [
          {
            "name": "recipe",
            "type": "object",
            "description": "The recipe to check",
            "additionalProperties": true
          }
        ]
      },

      {
        "name": "runRecipe",
        "type": "function",
        "description": "Unconditionally run a recipe. Filters and signing are not considered",
        "async": true,
        "parameters": [
          {
            "name": "recipe",
            "type": "object",
            "description": "The recipe to run",
            "additionalProperties": true
          }
        ]
      },

      {
        "name": "getPreferenceStudies",
        "type": "function",
        "description": "Get an array of all preference studies, both active and inactive",
        "async": true,
        "parameters": []
      },

      {
        "name": "getAddonStudies",
        "type": "function",
        "description": "Get an array of all add-on studies, both active and inactive",
        "async": true,
        "parameters": []
      },

      {
        "name": "bucketSample",
        "type": "function",
        "description": "Directly run a bucketSample, bypassing JEXL",
        "async": true,
        "parameters": [
          {
            "name": "input",
            "type": "array",
            "description": "The sampling input",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "type": "number",
            "description": "The first bucket to include"
          },
          {
            "name": "count",
            "type": "number",
            "description": "The number of buckets to include"
          },
          {
            "name": "total",
            "type": "number",
            "description": "The total number of buckets"
          }
        ]
      },

      {
        "name": "ratioSample",
        "type": "function",
        "description": "Run a ratioSample, often used for branch assignment. Returns the index of the matching ratio",
        "async": true,
        "parameters": [
          {
            "name": "input",
            "type": "string",
            "description": "The sampling input"
          },
          {
            "name": "ratios",
            "type": "array",
            "description": "The ratios to choose from",
            "items": {
              "type": "number",
              "additionalProperties": true
            }
          }
        ]
      }
    ],

    "events": [
      {
        "name": "onManualMode",
        "type": "function",
        "description": "Manual mode has changed",
        "parameters": [
          {
            "name": "manualMode",
            "description": "The new value of manual mode",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "onNormandyLog",
        "type": "function",
        "description": "Normandy has logged a message",
        "parameters": [
          {
            "name": "message",
            "description": "The message logged by Normandy",
            "type": "object"
          }
        ]
      }
    ]
  }
]
